üêî CHINA'S TEST MIGRATION EGG ü•ö
================================================================================
Date: 2025-09-16
Project: RSB Test Organization Strategy
Current Location: /home/xnull/repos/code/rust/oodx/rsb/tests/

üéØ EXECUTIVE SUMMARY
-------------------
Detected 24 tests in the root `/tests/` directory that need systematic categorization.
Existing category folders: sanity/, unit/, e2e/, uat/

üîç COMPREHENSIVE TEST MIGRATION STRATEGY
----------------------------------------

I. SMOKE & SANITY TESTS
----------------------
Files to move/categorize:
1. macro-smoke.rs       ‚Üí tests/sanity/macro_smoke.rs
   - Purpose: Basic macro compilation smoke test
   - Category: Sanity
   - Notes: Rename to clarify purpose

2. smoke-tests.rs       ‚Üí tests/sanity/core_smoke_tests.rs
   - Purpose: General smoke test suite
   - Category: Sanity
   - Notes: Could be expanded with more comprehensive checks

3. all-tests.rs         ‚Üí tests/sanity/comprehensive_suite.rs
   - Purpose: Stub test, potentially for overall system sanity
   - Category: Sanity
   - Notes: Consider removing if truly empty

II. GLOBAL & CORE TESTS
----------------------
Files to move/categorize:
1. global_core.rs       ‚Üí tests/unit/global_core.rs
   - Purpose: Global variable store and expansion tests
   - Category: Unit
   - Notes: Critical core functionality tests

2. global_ns.rs         ‚Üí tests/unit/global_namespace.rs
   - Purpose: Namespace management tests
   - Category: Unit
   - Notes: Important for understanding global state management

3. host_global.rs       ‚Üí tests/integration/host_global.rs
   - Purpose: Environment and configuration hydration
   - Category: Integration
   - Notes: Involves multiple system components

III. HOST & ENVIRONMENT TESTS
----------------------------
Files to move/categorize:
1. host_bootstrap.rs    ‚Üí tests/integration/host_bootstrap.rs
   - Purpose: Host bootstrap mechanism tests
   - Category: Integration
   - Notes: Involves system-level initialization

2. host_env.rs          ‚Üí tests/integration/host_environment.rs
   - Purpose: Environment import and mode setup
   - Category: Integration

3. host_paths.rs        ‚Üí tests/integration/host_paths.rs
   - Purpose: XDG path and directory management tests
   - Category: Integration
   - Notes: Critical for cross-platform compatibility

IV. FEATURE TESTS
----------------
Files to move/categorize:
1. features_dispatch.rs     ‚Üí tests/unit/features_dispatch.rs
   - Purpose: Command dispatch system tests
   - Category: Unit

2. features_tokens.rs       ‚Üí tests/unit/features_tokens.rs
   - Purpose: Token feature tests
   - Category: Unit

3. features_prompts.rs      ‚Üí tests/unit/features_prompts.rs
   - Purpose: Prompt system tests
   - Category: Unit
   - Notes: Conditionally compiled with 'prompts' feature

V. ADAPTER & ARGS PROCESSING
---------------------------
Files to move/categorize:
1. adapter_global.rs        ‚Üí tests/integration/adapter_global.rs
   - Purpose: Environment and configuration adapter tests
   - Category: Integration

2. adapter_global_light.rs  ‚Üí tests/unit/adapter_global_light.rs
   - Purpose: Lightweight global adapter tests
   - Category: Unit

3. args-processing.rs       ‚Üí tests/unit/args_processing.rs
   - Purpose: Command-line argument processing tests
   - Category: Unit

VI. SPECIAL & OPTIONAL TESTS
---------------------------
Files to move/categorize:
1. dev_pty.rs           ‚Üí tests/chaos/dev_pty.rs
   - Purpose: PTY (Pseudo-Terminal) interaction tests
   - Category: Chaos/Optional
   - Notes: Conditionally compiled, advanced system interaction

2. known-defects.rs     ‚Üí tests/regression/known_defects.rs
   - Purpose: Tracking known system defects
   - Category: Regression
   - Notes: Keep as a historical tracking mechanism

3. options.rs           ‚Üí tests/unit/options.rs
   - Purpose: CLI options and flag handling tests
   - Category: Unit

VII. POTENTIALLY REDUNDANT/STUB FILES
-------------------------------------
Files to review/potentially remove:
1. regression-suite.rs  ‚Üí Consider removing or expanding
2. comprehensive-suite.rs ‚Üí Consider removing or expanding
3. rsb-integration.rs   ‚Üí Consider removing or expanding
4. bootstrap-lifecycle.rs ‚Üí Consider removing or expanding

üöÄ MIGRATION STEPS
-----------------
1. Create new directories if not existing:
   - tests/sanity/
   - tests/unit/
   - tests/integration/
   - tests/regression/
   - tests/chaos/

2. Move files according to migration strategy
3. Update any import/module paths in moved files
4. Run full test suite to validate migrations
5. Remove original files in root tests/ directory

‚ö†Ô∏è DISCLAIMER
-------------
This migration strategy is based on current file contents and may require adjustments during actual implementation. Always validate test behavior after migration.

üêì Cluck cluck! Test organization is an egg-cellent way to improve code quality! ü•ö