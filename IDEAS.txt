
- (CLEANUP_OPTIONS) either auto sort flags so they go after positional arguments in the Args array or remove them after theyve been processed (they are already stored in the global context so we dont need them in Args)

- (CLI_ARGS_GLOBAL) add cli arguments to global as positionals "cli_arg_1" "cli_arg_2" (probably via bootstrap macro), then create helper functions to get these args directly via global instead of unwrapping the Args object (as an alternative)

- (FLAG_COMMANDS) consider a way to support commands that come in via flags for example both `version` and `help` can be run from `--version\-v` and `--help\-h` (pre dispatch commands) also I think help and version are added to dispatch by default. 


- (CLEAR_GLOBALS) add "clear globals" function store (maybe with filters to only clear certain prefixed/suffixed keys) 


- (NEW REPL SUPPORT) support REPL and general command dispatcher (e.g .cmd_dispatch!) that can be used in a repl (instead of dispatch that is based on inputs to the binary), it can use a second Args object just for command/repl (cmd_args or something)
  - similar to CLI_ARGS_GLOBAL update, make repl arguments available in global positionals "cmd_arg_1" "cmd_arg_2" etc
    with convenience macros as well
  - note that cli_arg_1 and cmd_arg_1 have differnt contexts. 


- (NOSEY TOML SNOOPING) support pulling custom values from Cargo.toml into the global context via en enable command like `nosey_toml_enable()` or an option via bootstrap or something that will enable the loading from toml; in particular these two namespaces `hub` and `inf` 

```toml
# Cargo.toml
[package.metadata.hub]
# Custom hub metadata section for hub configuration


[package.metadata.inf]
# Custom meta information section for general use
```

values found in these namespaces are prefixed with hub_<key> and inf_<key>; any dot, hyphen or camelCase keys are turned into snake_case (is it slug_case?) I forget what we call it (rsb string library already has macros for these string conversions if needed)
